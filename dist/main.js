(()=>{"use strict";const e={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let t;const o=new Uint8Array(16);function n(){if(!t){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");t=crypto.getRandomValues.bind(crypto)}return t(o)}const s=[];for(let S=0;S<256;++S)s.push((S+256).toString(16).slice(1));console.log(function(t,o,c){if(e.randomUUID&&!o&&!t)return e.randomUUID();const i=(t=t||{}).random||(t.rng||n)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,o){c=c||0;for(let e=0;e<16;++e)o[c+e]=i[e];return o}return function(e,t=0){return(s[e[t+0]]+s[e[t+1]]+s[e[t+2]]+s[e[t+3]]+"-"+s[e[t+4]]+s[e[t+5]]+"-"+s[e[t+6]]+s[e[t+7]]+"-"+s[e[t+8]]+s[e[t+9]]+"-"+s[e[t+10]]+s[e[t+11]]+s[e[t+12]]+s[e[t+13]]+s[e[t+14]]+s[e[t+15]]).toLowerCase()}(i)}());const c=document.getElementById("uploadArea"),i=document.getElementById("fileInput"),r=document.getElementById("fileName"),d=document.getElementById("csvKeyName"),l=document.getElementById("start"),a=document.getElementById("downloadButton");var u="",p={};function g(e){for(const t of e)"text/csv"===t.type||t.name.endsWith(".csv")?(r.textContent=`Uploaded File: ${t.name}`,l.disabled=!1,a.disabled=!1,m(t)):(r.textContent="Please upload a valid CSV file.",console.log("Not a CSV file:",t.name))}function f(e){const t={};return e.forEach((e=>{t[e]="empty"})),t}function m(e){const t=new FileReader;t.onload=function(e){const t=e.target.result,o=t.split("\n")[0].split(",").filter((e=>""!==e.trim()));console.log("CSV Header:",o),console.log("Number of Columns:",o.length),p=f(o),u=t},t.readAsText(e)}let h;function w(e,t){if("speechSynthesis"in window&&h){const o=new SpeechSynthesisUtterance(e);o.voice=h,o.onend=()=>{t&&t()},window.speechSynthesis.speak(o)}else console.log("Text-to-Speech is not supported in this browser.")}if(l.disabled=!0,a.disabled=!0,c.addEventListener("click",(()=>i.click())),c.addEventListener("dragover",(e=>{e.preventDefault(),c.classList.add("dragging")})),c.addEventListener("dragleave",(()=>{c.classList.remove("dragging")})),c.addEventListener("drop",(e=>{e.preventDefault(),c.classList.remove("dragging"),g(e.dataTransfer.files)})),i.addEventListener("change",(e=>{g(e.target.files)})),a.addEventListener("click",(function(){!function(e,t="file.csv"){const o=new Blob([e],{type:"text/csv"}),n=URL.createObjectURL(o),s=document.createElement("a");s.href=n,s.download=t,document.body.appendChild(s),s.click(),document.body.removeChild(s)}(u,"data.csv")})),"speechSynthesis"in window?window.speechSynthesis.onvoiceschanged=()=>{const e=window.speechSynthesis.getVoices();h=e.find((e=>"en-US"===e.lang||"en-GB"===e.lang))}:console.log("Text-to-Speech is not supported in this browser."),"SpeechRecognition"in window||"webkitSpeechRecognition"in window){const v=new(window.SpeechRecognition||window.webkitSpeechRecognition);var y=0,b=!1;function E(){console.log("Create New Record..."),p=f(Object.keys(p)),y=2,v.stop(),b=!0,w("You selected create. Now fill in each key value.",(()=>{b=!1,v.start()}));const e=Object.entries(p).map((([e,t])=>`${e}: ${t}`)).join(", ");d.textContent=`${e}`}function C(e){if(e.length>0){for(const[t,o]of Object.entries(p))if("empty"===o){p[t]=e;break}Object.values(p).includes("empty")||(v.stop(),b=!0,w(`New record created. ${Object.entries(p).map((([e,t])=>`${e}: ${t}`)).join(", ")}`,(()=>{b=!1,v.start(),y=1})),function(e){const t=e.join(",")+"\n";""!==u&&(u+=t,console.log("Updated CSV Content:"),console.log(u))}(Object.values(p)))}}v.lang="en-US",v.continuous=!1,v.onstart=()=>{console.log("Speech recognition started. Speak now."),l.disabled=!0},v.onresult=e=>{const t=e.results[0][0].transcript;if(console.log(`Recognized: ${t}`),t.toLowerCase().includes("alexa")&&(console.log("alexa"),console.log("Alexa detected! Performing an action..."),y=1,v.stop(),b=!0,w("Select mode from create, edit or delete.",(()=>{b=!1,v.start()})),d.textContent="Select a command: CREATE, EDIT, or DELETE."),l.disabled=!0,v.stop(),1==y&&(console.log(`Command: ${t}`),t.toLowerCase().includes("create")))E();else if(2!=y);else{console.log(`Fill each field: ${t}`),C(t);const e=Object.entries(p).map((([e,t])=>`${e}: ${t}`)).join(", ");d.textContent=`${e}`}},v.onend=()=>{console.log("Speech recognition ended."),l.disabled=!0,!1===b&&v.start()},v.onerror=e=>{console.error("Speech recognition error:",e.error),l.disabled=!1},l.onclick=()=>{w("Welcome, say Alexa to start.",(()=>{})),v.start()}}else alert("Sorry, your browser does not support the Web Speech API.")})();